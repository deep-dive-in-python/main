{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VAE","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyO+ekSW3HxneyeHgbEIyWez"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Fraud Detection with Variational Autoencoder"],"metadata":{"id":"ZdPr-HSMNcZJ"}},{"cell_type":"markdown","source":["In my previous naive attempt at applying autoencoders to fraud detection, I trained a simple autoencoder with one hidden layer on each of the encoder side and decoder side. The autoencoder was asymmetrical and overcomplete, i.e. the hidden layer dimensions and the latent dimension were asymetrical and larger than the input size. Even so, it seemed to perform alright by piping the latent encoding through a simple linear classifer. An adversarial net was also tried out, but only as a classifier alternative to the linear benchmark. This may be something I would revisit in the future.\n","\n","In this new attempt, using the same credit card data by ULB machine learning group, I explore applying Variational Autoencoders (VAE) to the same problem. Functionally, Variational Autoencoders also try to reconstruct the input, but with the additional contraint that the latent representation learns the probability distribution parameters of the input rather than an arbitrary encoding of the input, hance the \"Variational\". What's good about learning the distribution? One, by explicitly modeling the data and noise generation processes, VAE can learn to separate the two, making it more robust. Two, the latent space can become more interpreble if disentanglement constraints are applied. Three, you can generate new samples by sampling latent vectors and pipe them through the decoder. There are more points and I will leave the technical details to the true professionals. You can find the resources that helped me below."],"metadata":{"id":"8P0LrS5ZNi5E"}},{"cell_type":"markdown","source":["### Contents\n","1. Raw Dataset\n","2. Visualize Preprocessed Transaction Features\n","3. Train a Variational Autoencoder\n","4. Visualize Latent Representations\n","5. VAE vs SVM\n","6. Evaluation on Test Set\n","7. Limitations"],"metadata":{"id":"pJGquh38Ni7c"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"8zHX7AvMhknA","executionInfo":{"status":"ok","timestamp":1658490571478,"user_tz":-540,"elapsed":12,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["!pip install --upgrade --pre tensorflow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hRud1_oYhphh","executionInfo":{"status":"ok","timestamp":1658490578363,"user_tz":-540,"elapsed":6895,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"8e522f3a-60c4-47db-88aa-eff128050baf"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (2.9.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.26.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.2)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.15.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.47.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (4.1.1)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: tensorflow-estimator<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.17.3)\n","Requirement already satisfied: flatbuffers<2,>=1.12 in /root/.local/lib/python3.7/site-packages (from tensorflow) (1.12)\n","Requirement already satisfied: tensorboard<2.10,>=2.9 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tensorflow) (21.3)\n","Requirement already satisfied: keras<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.1.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.21.6)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.2.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tensorflow) (57.4.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (14.0.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tensorflow) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tensorflow) (1.5.2)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (3.4.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (2.23.0)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.8.1)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.4.6)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.6.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.35.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tensorflow) (3.0.9)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.2.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.2.4)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (4.12.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2022.6.15)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (3.0.4)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (3.2.0)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install --upgrade --pre tensorflow-gpu"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BTniliFDhpno","executionInfo":{"status":"ok","timestamp":1658490584902,"user_tz":-540,"elapsed":6542,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"e9c152c2-ab01-4772-f9ab-cdd0d53dfdd3"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow-gpu in /usr/local/lib/python3.7/dist-packages (2.9.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (0.26.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (3.3.0)\n","Requirement already satisfied: tensorboard<2.10,>=2.9 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (2.9.1)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.21.6)\n","Requirement already satisfied: keras<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (2.9.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (3.17.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (21.3)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.15.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (14.0.1)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (3.1.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (57.4.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.47.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.6.3)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.1.2)\n","Requirement already satisfied: tensorflow-estimator<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (2.9.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (4.1.1)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (0.2.0)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (0.4.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.1.0)\n","Requirement already satisfied: flatbuffers<2,>=1.12 in /root/.local/lib/python3.7/site-packages (from tensorflow-gpu) (1.12)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu) (1.14.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tensorflow-gpu) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tensorflow-gpu) (1.5.2)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (0.4.6)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (1.8.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (1.0.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (2.23.0)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (0.6.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (1.35.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow-gpu) (3.4.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tensorflow-gpu) (3.0.9)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow-gpu) (0.2.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow-gpu) (4.2.4)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow-gpu) (4.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow-gpu) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow-gpu) (4.12.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow-gpu) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow-gpu) (2022.6.15)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow-gpu) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow-gpu) (3.0.4)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow-gpu) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow-gpu) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow-gpu) (3.2.0)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["pip install --upgrade pip "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TuY7iDOuhpsR","executionInfo":{"status":"ok","timestamp":1658490591054,"user_tz":-540,"elapsed":6156,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"967466c0-d5fc-4185-ca78-4816ef0d94a0"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pip in /usr/local/lib/python3.7/dist-packages (22.2)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["pip install tensorflow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k8JnuvWihauq","executionInfo":{"status":"ok","timestamp":1658490597687,"user_tz":-540,"elapsed":6637,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"f1b88226-b24e-4a1a-d6ef-8b1a3ce7c633"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (2.9.1)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.15.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.1.0)\n","Requirement already satisfied: keras<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: tensorboard<2.10,>=2.9 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.1)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (4.1.1)\n","Requirement already satisfied: flatbuffers<2,>=1.12 in /root/.local/lib/python3.7/site-packages (from tensorflow) (1.12)\n","Requirement already satisfied: tensorflow-estimator<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tensorflow) (57.4.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.2.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.26.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.21.6)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tensorflow) (21.3)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.47.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.17.3)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (14.0.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tensorflow) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tensorflow) (1.5.2)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.4.6)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (2.23.0)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.35.0)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.0.1)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.6.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (3.4.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.8.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tensorflow) (3.0.9)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.2.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.2.4)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (4.12.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2022.6.15)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (3.2.0)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"markdown","source":[""],"metadata":{"id":"sc-JTbM3Nif-"}},{"cell_type":"code","source":["pip install --upgrade tensorflow-probability  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6LD286TAmbbr","executionInfo":{"status":"ok","timestamp":1658490604141,"user_tz":-540,"elapsed":6457,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"03688928-43b8-4549-dd9e-c943f705022f"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow-probability in /usr/local/lib/python3.7/dist-packages (0.17.0)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.21.6)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.2.0)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.15.0)\n","Requirement already satisfied: gast>=0.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (0.4.0)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (4.4.2)\n","Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.3.0)\n","Requirement already satisfied: dm-tree in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (0.1.7)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install --upgrade --user tf-nightly"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1XeELAENmc6N","executionInfo":{"status":"ok","timestamp":1658490612612,"user_tz":-540,"elapsed":8475,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"73a3dd35-ce5f-404e-e485-567e46a382ef"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tf-nightly in /root/.local/lib/python3.7/site-packages (2.10.0.dev20220722)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (57.4.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (14.0.1)\n","Collecting flatbuffers>=2.0\n","  Using cached flatbuffers-2.0-py2.py3-none-any.whl (26 kB)\n","Requirement already satisfied: tb-nightly~=2.10.0.a in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0a20220721)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.2.0)\n","Requirement already satisfied: tf-estimator-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0.dev2022072208)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.1.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.1.2)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.47.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.2.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.21.6)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.4.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.26.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.17.3)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.15.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.14.1)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.1.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (21.3)\n","Requirement already satisfied: keras-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0.dev2022072207)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.3.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.6.3)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (4.1.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tf-nightly) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tf-nightly) (1.5.2)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (3.4.1)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (0.6.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.0.1)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (0.4.6)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (2.23.0)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.8.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.35.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tf-nightly) (3.0.9)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (0.2.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (4.2.4)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (4.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly) (4.12.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (2022.6.15)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly) (3.2.0)\n","Installing collected packages: flatbuffers\n","  Attempting uninstall: flatbuffers\n","    Found existing installation: flatbuffers 1.12\n","    Uninstalling flatbuffers-1.12:\n","      Successfully uninstalled flatbuffers-1.12\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow 2.9.1 requires flatbuffers<2,>=1.12, but you have flatbuffers 2.0 which is incompatible.\n","tensorflow-gpu 2.9.1 requires flatbuffers<2,>=1.12, but you have flatbuffers 2.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed flatbuffers-2.0\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install --upgrade tf-nightly  --user\n","!pip install --upgrade tf-nightly-gpu"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ccLTwmNnmbi6","executionInfo":{"status":"ok","timestamp":1658490630964,"user_tz":-540,"elapsed":18357,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"dc3ed2ac-2485-407b-ace8-54ab198ffa41"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tf-nightly in /root/.local/lib/python3.7/site-packages (2.10.0.dev20220722)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.2.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (4.1.1)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.47.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.14.1)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.17.3)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.2.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.21.6)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.1.0)\n","Requirement already satisfied: flatbuffers>=2.0 in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.0)\n","Requirement already satisfied: tb-nightly~=2.10.0.a in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0a20220721)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (57.4.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.26.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.15.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (21.3)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.3.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.1.2)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (14.0.1)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (3.1.0)\n","Requirement already satisfied: keras-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0.dev2022072207)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (1.6.3)\n","Requirement already satisfied: tf-estimator-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly) (2.10.0.dev2022072208)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly) (0.4.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tf-nightly) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tf-nightly) (1.5.2)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.0.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.35.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (0.4.6)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (1.8.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (2.23.0)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (0.6.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly) (3.4.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tf-nightly) (3.0.9)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (4.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (4.2.4)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (0.2.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly) (4.12.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (2022.6.15)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly) (2.10)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly) (3.2.0)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tf-nightly-gpu in /usr/local/lib/python3.7/dist-packages (2.10.0.dev20220722)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (0.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.6.3)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.1.2)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.47.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (57.4.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (0.26.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.21.6)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.15.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.14.1)\n","Requirement already satisfied: tf-estimator-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly-gpu) (2.10.0.dev2022072208)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (21.3)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (1.1.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (3.3.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (3.17.3)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (3.1.0)\n","Requirement already satisfied: keras-nightly~=2.10.0.dev in /root/.local/lib/python3.7/site-packages (from tf-nightly-gpu) (2.10.0.dev2022072207)\n","Requirement already satisfied: flatbuffers>=2.0 in /root/.local/lib/python3.7/site-packages (from tf-nightly-gpu) (2.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (14.0.1)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (4.1.1)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tf-nightly-gpu) (0.2.0)\n","Requirement already satisfied: tb-nightly~=2.10.0.a in /root/.local/lib/python3.7/site-packages (from tf-nightly-gpu) (2.10.0a20220721)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tf-nightly-gpu) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tf-nightly-gpu) (1.5.2)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (1.8.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (1.35.0)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (2.23.0)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (0.6.1)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (0.4.6)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tb-nightly~=2.10.0.a->tf-nightly-gpu) (3.4.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tf-nightly-gpu) (3.0.9)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly-gpu) (4.8)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly-gpu) (4.2.4)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly-gpu) (0.2.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly-gpu) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly-gpu) (4.12.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly-gpu) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly-gpu) (2022.6.15)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly-gpu) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tb-nightly~=2.10.0.a->tf-nightly-gpu) (2.10)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tb-nightly~=2.10.0.a->tf-nightly-gpu) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tb-nightly~=2.10.0.a->tf-nightly-gpu) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tb-nightly~=2.10.0.a->tf-nightly-gpu) (3.2.0)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install --user tensorflow --upgrade"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZIxW4yPymbnS","executionInfo":{"status":"ok","timestamp":1658490640492,"user_tz":-540,"elapsed":9539,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"2caa68ee-5482-413c-b09a-cb279cfacee0"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (2.9.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tensorflow) (21.3)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.21.6)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.2.0)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.1.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.2)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.26.0)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: keras<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.47.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (14.0.1)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: protobuf<3.20,>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (3.17.3)\n","Requirement already satisfied: tensorboard<2.10,>=2.9 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.1)\n","Collecting flatbuffers<2,>=1.12\n","  Using cached flatbuffers-1.12-py2.py3-none-any.whl (15 kB)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.15.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.1.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from tensorflow) (57.4.0)\n","Requirement already satisfied: tensorflow-estimator<2.10.0,>=2.9.0rc0 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (2.9.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow) (4.1.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from astunparse>=1.6.0->tensorflow) (0.37.1)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tensorflow) (1.5.2)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.8.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (2.23.0)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.35.0)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.6.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (1.0.1)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (0.4.6)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard<2.10,>=2.9->tensorflow) (3.4.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tensorflow) (3.0.9)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.2.4)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (4.8)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.2.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (4.12.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2022.6.15)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard<2.10,>=2.9->tensorflow) (2.10)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.10,>=2.9->tensorflow) (3.8.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.10,>=2.9->tensorflow) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.10,>=2.9->tensorflow) (3.2.0)\n","Installing collected packages: flatbuffers\n","  Attempting uninstall: flatbuffers\n","    Found existing installation: flatbuffers 2.0\n","    Uninstalling flatbuffers-2.0:\n","      Successfully uninstalled flatbuffers-2.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tf-nightly 2.10.0.dev20220722 requires flatbuffers>=2.0, but you have flatbuffers 1.12 which is incompatible.\n","tf-nightly-gpu 2.10.0.dev20220722 requires flatbuffers>=2.0, but you have flatbuffers 1.12 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed flatbuffers-1.12\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install --user tensorflow-probability --upgrade"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8a8AkG2RnibU","executionInfo":{"status":"ok","timestamp":1658490647496,"user_tz":-540,"elapsed":7006,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"f739c0de-b85b-4564-8a22-bf5024b48952"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow-probability in /usr/local/lib/python3.7/dist-packages (0.17.0)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.2.0)\n","Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.3.0)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (4.4.2)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.15.0)\n","Requirement already satisfied: gast>=0.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (0.4.0)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (1.21.6)\n","Requirement already satisfied: dm-tree in /usr/local/lib/python3.7/dist-packages (from tensorflow-probability) (0.1.7)\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"code","source":["from __future__ import absolute_import\n","from __future__ import division\n","from __future__ import print_function"],"metadata":{"id":"G2C_-bLhnt8M","executionInfo":{"status":"ok","timestamp":1658490647497,"user_tz":-540,"elapsed":21,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"nU0_lF9epeTS","executionInfo":{"status":"ok","timestamp":1658490647499,"user_tz":-540,"elapsed":22,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.python import tf2\n","if not tf2.enabled():\n","    import tensorflow.compat.v2 as tf\n","    tf.enable_v2_behavior()\n","    assert tf2.enabled()"],"metadata":{"id":"p-JwDrRupffb","executionInfo":{"status":"ok","timestamp":1658490647500,"user_tz":-540,"elapsed":23,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["# import tensorflow_datasets as tfds , 여기서 너무 오래 걸렸어.... tensorflow_probability 때문에...\n","import tensorflow_probability as tfp"],"metadata":{"id":"UeGz-bRnph3N","executionInfo":{"status":"ok","timestamp":1658490647501,"user_tz":-540,"elapsed":23,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["tfk = tf.keras\n","tfkl = tf.keras.layers\n","tfpl = tfp.layers\n","tfd = tfp.distributions"],"metadata":{"id":"59UQb-aXplcU","executionInfo":{"status":"ok","timestamp":1658490647502,"user_tz":-540,"elapsed":23,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model"],"metadata":{"id":"8sRihphBpqUo","executionInfo":{"status":"ok","timestamp":1658490647504,"user_tz":-540,"elapsed":24,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split \n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.manifold import TSNE\n","import os"],"metadata":{"id":"eOHJEOAtprpg","executionInfo":{"status":"ok","timestamp":1658490647906,"user_tz":-540,"elapsed":424,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["%matplotlib inline\n","np.random.seed(0)\n","tf.random.set_seed(0)\n","print(tf.__version__)\n","print(tfp.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E0n8-zONptaH","executionInfo":{"status":"ok","timestamp":1658490647907,"user_tz":-540,"elapsed":10,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"0a2f87d6-8915-4367-a9cb-6f2b2ba22b4f"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["2.10.0-dev20220722\n","0.17.0\n"]}]},{"cell_type":"code","source":["### Utility Functions\n","## Plots\n","# Plot Feature Projection [credit: https://www.kaggle.com/shivamb/semi-supervised-classification-using-autoencoders]\n","def tsne_plot(x1, y1, name=\"graph.png\"):\n","    tsne = TSNE(n_components=2, random_state=0)\n","    X_t = tsne.fit_transform(x1)\n","#     plt.figure(figsize=(12, 8))\n","    plt.scatter(X_t[np.where(y1 == 0), 0], X_t[np.where(y1 == 0), 1], marker='o', color='g', linewidth='1', alpha=0.8, label='Non Fraud', s=2)\n","    plt.scatter(X_t[np.where(y1 == 1), 0], X_t[np.where(y1 == 1), 1], marker='o', color='r', linewidth='1', alpha=0.8, label='Fraud', s=2)\n","\n","    plt.legend(loc='best');\n","    plt.savefig(name);\n","    plt.show();\n","    \n","# Plot Keras training history\n","def plot_loss(hist):\n","    plt.plot(hist.history['loss'])\n","    plt.plot(hist.history['val_loss'])\n","    plt.title('model loss')\n","    plt.ylabel('loss')\n","    plt.xlabel('epoch')\n","    plt.legend(['train', 'test'], loc='upper left')\n","    plt.yscale('log',basey=10)\n","    plt.show()\n","    "],"metadata":{"id":"HpObjAqvpup8","executionInfo":{"status":"ok","timestamp":1658490647909,"user_tz":-540,"elapsed":10,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":61,"outputs":[]},{"cell_type":"markdown","source":["### 1. Raw Dataset"],"metadata":{"id":"FWjj9SlZqB-k"}},{"cell_type":"code","source":["import pandas as pd\n","import io\n","!pip uninstall google.colab"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QHWfaXSnrHmk","executionInfo":{"status":"ok","timestamp":1658489973391,"user_tz":-540,"elapsed":54256,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"688e8c2d-65ed-478a-952d-c96bbf7e73ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found existing installation: google-colab 1.0.0\n","Uninstalling google-colab-1.0.0:\n","  Would remove:\n","    /usr/local/lib/python3.7/dist-packages/google/colab/*\n","    /usr/local/lib/python3.7/dist-packages/google_colab-1.0.0-py3.7-nspkg.pth\n","    /usr/local/lib/python3.7/dist-packages/google_colab-1.0.0.dist-info/*\n","Proceed (Y/n)? y\n","  Successfully uninstalled google-colab-1.0.0\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}]},{"cell_type":"markdown","source":["### https://rfriend.tistory.com/564 참고"],"metadata":{"id":"wAbxQ3__wSys"}},{"cell_type":"code","source":["from google.colab import files\n","file_uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":183},"id":"ZwHhIVdfvml9","executionInfo":{"status":"ok","timestamp":1658492137601,"user_tz":-540,"elapsed":1489701,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"5f6b6d24-ecb6-4a77-f6c5-c4d81bbaef7a"},"execution_count":62,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-cd172cf9-7b9f-4338-b995-9134f079422a\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-cd172cf9-7b9f-4338-b995-9134f079422a\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving sample_submission.csv to sample_submission.csv\n","Saving test.csv to test.csv\n","Saving train.csv to train.csv\n","Saving val.csv to val.csv\n"]}]},{"cell_type":"code","source":["import io\n","import pandas as pd\n","\n","td = pd.read_csv(io.BytesIO(file_uploaded['train.csv']))\n","td['Class'] = 0 #Class==0 을 넣어서 정상 데이터로 가정해보자....\n","test_d = pd.read_csv(io.BytesIO(file_uploaded['test.csv']))\n","test_d['Class'] = 0\n","td.head()"],"metadata":{"id":"CuXhOeMQtnl8","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1658494318036,"user_tz":-540,"elapsed":3122,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"58ab409c-f589-488f-a2b9-c9d4f52fc58b"},"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ID        V1        V2        V3        V4        V5        V6        V7  \\\n","0   3 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","1   4 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","2   6 -0.425966  0.960523  1.141109 -0.168252  0.420987 -0.029728  0.476201   \n","3   8 -0.644269  1.417964  1.074380 -0.492199  0.948934  0.428118  1.120631   \n","4   9 -0.894286  0.286157 -0.113192 -0.271526  2.669599  3.721818  0.370145   \n","\n","         V8        V9  ...       V22       V23       V24       V25       V26  \\\n","0  0.247676 -1.514654  ...  0.771679  0.909412 -0.689281 -0.327642 -0.139097   \n","1  0.377436 -1.387024  ...  0.005274 -0.190321 -1.175575  0.647376 -0.221929   \n","2  0.260314 -0.568671  ... -0.559825 -0.026398 -0.371427 -0.232794  0.105915   \n","3 -3.807864  0.615375  ... -1.015455  0.057504 -0.649709 -0.415267 -0.051634   \n","4  0.851084 -0.392048  ... -0.268092 -0.204233  1.011592  0.373205 -0.384157   \n","\n","        V27       V28       V29       V30  Class  \n","0 -0.055353 -0.059752  4.983721 -0.994972      0  \n","1  0.062723  0.061458  1.418291 -0.994972      0  \n","2  0.253844  0.081080 -0.256131 -0.994960      0  \n","3 -1.206921 -1.085339  0.262698 -0.994901      0  \n","4  0.011747  0.142404  0.994900 -0.994901      0  \n","\n","[5 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-bcf42b9e-de8e-4451-b828-91d323ddaef0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>V29</th>\n","      <th>V30</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>4.983721</td>\n","      <td>-0.994972</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>1.418291</td>\n","      <td>-0.994972</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>-0.425966</td>\n","      <td>0.960523</td>\n","      <td>1.141109</td>\n","      <td>-0.168252</td>\n","      <td>0.420987</td>\n","      <td>-0.029728</td>\n","      <td>0.476201</td>\n","      <td>0.260314</td>\n","      <td>-0.568671</td>\n","      <td>...</td>\n","      <td>-0.559825</td>\n","      <td>-0.026398</td>\n","      <td>-0.371427</td>\n","      <td>-0.232794</td>\n","      <td>0.105915</td>\n","      <td>0.253844</td>\n","      <td>0.081080</td>\n","      <td>-0.256131</td>\n","      <td>-0.994960</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>-0.644269</td>\n","      <td>1.417964</td>\n","      <td>1.074380</td>\n","      <td>-0.492199</td>\n","      <td>0.948934</td>\n","      <td>0.428118</td>\n","      <td>1.120631</td>\n","      <td>-3.807864</td>\n","      <td>0.615375</td>\n","      <td>...</td>\n","      <td>-1.015455</td>\n","      <td>0.057504</td>\n","      <td>-0.649709</td>\n","      <td>-0.415267</td>\n","      <td>-0.051634</td>\n","      <td>-1.206921</td>\n","      <td>-1.085339</td>\n","      <td>0.262698</td>\n","      <td>-0.994901</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>-0.894286</td>\n","      <td>0.286157</td>\n","      <td>-0.113192</td>\n","      <td>-0.271526</td>\n","      <td>2.669599</td>\n","      <td>3.721818</td>\n","      <td>0.370145</td>\n","      <td>0.851084</td>\n","      <td>-0.392048</td>\n","      <td>...</td>\n","      <td>-0.268092</td>\n","      <td>-0.204233</td>\n","      <td>1.011592</td>\n","      <td>0.373205</td>\n","      <td>-0.384157</td>\n","      <td>0.011747</td>\n","      <td>0.142404</td>\n","      <td>0.994900</td>\n","      <td>-0.994901</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 32 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bcf42b9e-de8e-4451-b828-91d323ddaef0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bcf42b9e-de8e-4451-b828-91d323ddaef0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bcf42b9e-de8e-4451-b828-91d323ddaef0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["test_d.head()\n","test_d.rename(columns={df.columns[0]:\"ID1\"}, inplace = True)\n","test_d[\"ID1\"] = 2\n","test_d.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"ITevQIry6gYQ","executionInfo":{"status":"ok","timestamp":1658494867047,"user_tz":-540,"elapsed":274,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"ddff282f-da4c-4809-e9ec-ce146813b9be"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ID1        V1        V2        V3        V4        V5        V6        V7  \\\n","0    2 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1    2  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2    2 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","3    2  1.229658  0.141004  0.045371  1.202613  0.191881  0.272708 -0.005159   \n","4    2  0.384978  0.616109 -0.874300 -0.094019  2.924584  3.317027  0.470455   \n","\n","         V8        V9  ...       V22       V23       V24       V25       V26  \\\n","0  0.098698  0.363787  ...  0.277838 -0.110474  0.066928  0.128539 -0.189115   \n","1  0.085102 -0.255425  ... -0.638672  0.101288 -0.339846  0.167170  0.125895   \n","2 -0.270533  0.817739  ...  0.798278 -0.137458  0.141267 -0.206010  0.502292   \n","3  0.081213  0.464960  ... -0.270710 -0.154104 -0.780055  0.750137 -0.257237   \n","4  0.538247 -0.558895  ...  0.238422  0.009130  0.996710 -0.767315 -0.492208   \n","\n","        V27       V28       V29       V30  Class  \n","0  0.133558 -0.021053  1.783274 -0.994983      0  \n","1 -0.008983  0.014724 -0.269825 -0.994983      0  \n","2  0.219422  0.215153  0.670579 -0.994960      0  \n","3  0.034507  0.005168 -0.237686 -0.994937      0  \n","4  0.042472 -0.054337 -0.167819 -0.994866      0  \n","\n","[5 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-1b6fbf62-8112-421d-818f-38a6c3d43f29\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID1</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>V29</th>\n","      <th>V30</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>1.783274</td>\n","      <td>-0.994983</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>-0.269825</td>\n","      <td>-0.994983</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>0.670579</td>\n","      <td>-0.994960</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>1.229658</td>\n","      <td>0.141004</td>\n","      <td>0.045371</td>\n","      <td>1.202613</td>\n","      <td>0.191881</td>\n","      <td>0.272708</td>\n","      <td>-0.005159</td>\n","      <td>0.081213</td>\n","      <td>0.464960</td>\n","      <td>...</td>\n","      <td>-0.270710</td>\n","      <td>-0.154104</td>\n","      <td>-0.780055</td>\n","      <td>0.750137</td>\n","      <td>-0.257237</td>\n","      <td>0.034507</td>\n","      <td>0.005168</td>\n","      <td>-0.237686</td>\n","      <td>-0.994937</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>0.384978</td>\n","      <td>0.616109</td>\n","      <td>-0.874300</td>\n","      <td>-0.094019</td>\n","      <td>2.924584</td>\n","      <td>3.317027</td>\n","      <td>0.470455</td>\n","      <td>0.538247</td>\n","      <td>-0.558895</td>\n","      <td>...</td>\n","      <td>0.238422</td>\n","      <td>0.009130</td>\n","      <td>0.996710</td>\n","      <td>-0.767315</td>\n","      <td>-0.492208</td>\n","      <td>0.042472</td>\n","      <td>-0.054337</td>\n","      <td>-0.167819</td>\n","      <td>-0.994866</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 32 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b6fbf62-8112-421d-818f-38a6c3d43f29')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1b6fbf62-8112-421d-818f-38a6c3d43f29 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1b6fbf62-8112-421d-818f-38a6c3d43f29');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["test_d.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"A7j0_Y_w6yTE","executionInfo":{"status":"ok","timestamp":1658494872316,"user_tz":-540,"elapsed":967,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"a486c776-bdfa-43c0-a7ca-96b2b62ae5c4"},"execution_count":142,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ID1             V1             V2             V3             V4  \\\n","count  142503.0  142503.000000  142503.000000  142503.000000  142503.000000   \n","mean        2.0      -0.001150      -0.001432      -0.008045       0.002953   \n","std         0.0       1.970325       1.660569       1.534737       1.420579   \n","min         2.0     -46.855047     -63.344698     -48.325589      -5.683171   \n","25%         2.0      -0.918999      -0.601184      -0.897737      -0.843486   \n","50%         2.0       0.020709       0.063302       0.177372      -0.019912   \n","75%         2.0       1.316016       0.805219       1.022959       0.745448   \n","max         2.0       2.446505      22.057729       9.382558      16.875344   \n","\n","                  V5             V6             V7             V8  \\\n","count  142503.000000  142503.000000  142503.000000  142503.000000   \n","mean        0.000413      -0.000566      -0.005718       0.000156   \n","std         1.399096       1.341445       1.276403       1.218598   \n","min      -113.743307     -21.929312     -43.557242     -73.216718   \n","25%        -0.691653      -0.768976      -0.557038      -0.207301   \n","50%        -0.054976      -0.274172       0.039709       0.023347   \n","75%         0.612851       0.397152       0.572513       0.327192   \n","max        32.911462      73.301626     120.589494      19.587773   \n","\n","                  V9  ...            V22            V23            V24  \\\n","count  142503.000000  ...  142503.000000  142503.000000  142503.000000   \n","mean        0.002663  ...      -0.000245       0.000755       0.000436   \n","std         1.102741  ...       0.728063       0.622160       0.605976   \n","min       -13.320155  ...     -10.933144     -36.666000      -2.836627   \n","25%        -0.639999  ...      -0.544174      -0.161839      -0.354442   \n","50%        -0.048317  ...       0.005412      -0.010199       0.041524   \n","75%         0.601995  ...       0.528426       0.148161       0.440355   \n","max        15.594995  ...      10.503090      22.083545       4.584549   \n","\n","                 V25            V26            V27            V28  \\\n","count  142503.000000  142503.000000  142503.000000  142503.000000   \n","mean       -0.001799       0.000131       0.000291       0.000459   \n","std         0.521118       0.482710       0.408738       0.312964   \n","min        -7.081325      -2.604551     -22.565679     -15.430084   \n","25%        -0.317557      -0.327252      -0.070642      -0.052847   \n","50%         0.015344      -0.051785       0.001390       0.011157   \n","75%         0.347873       0.241060       0.091201       0.078123   \n","max         6.070850       3.517346      31.612198      15.870474   \n","\n","                 V29            V30     Class  \n","count  142503.000000  142503.000000  142503.0  \n","mean        0.927643       0.120857       0.0  \n","std         3.587433       0.557624       0.0  \n","min        -0.307413      -0.994983       0.0  \n","25%        -0.228044      -0.356712       0.0  \n","50%         0.000000       0.003665       0.0  \n","75%         0.772375       0.642741       0.0  \n","max       358.683155       1.035022       0.0  \n","\n","[8 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-5e7a48c4-29f6-44a2-8890-3ec842e23e8c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID1</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>V29</th>\n","      <th>V30</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>142503.0</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>...</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.000000</td>\n","      <td>142503.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.0</td>\n","      <td>-0.001150</td>\n","      <td>-0.001432</td>\n","      <td>-0.008045</td>\n","      <td>0.002953</td>\n","      <td>0.000413</td>\n","      <td>-0.000566</td>\n","      <td>-0.005718</td>\n","      <td>0.000156</td>\n","      <td>0.002663</td>\n","      <td>...</td>\n","      <td>-0.000245</td>\n","      <td>0.000755</td>\n","      <td>0.000436</td>\n","      <td>-0.001799</td>\n","      <td>0.000131</td>\n","      <td>0.000291</td>\n","      <td>0.000459</td>\n","      <td>0.927643</td>\n","      <td>0.120857</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.0</td>\n","      <td>1.970325</td>\n","      <td>1.660569</td>\n","      <td>1.534737</td>\n","      <td>1.420579</td>\n","      <td>1.399096</td>\n","      <td>1.341445</td>\n","      <td>1.276403</td>\n","      <td>1.218598</td>\n","      <td>1.102741</td>\n","      <td>...</td>\n","      <td>0.728063</td>\n","      <td>0.622160</td>\n","      <td>0.605976</td>\n","      <td>0.521118</td>\n","      <td>0.482710</td>\n","      <td>0.408738</td>\n","      <td>0.312964</td>\n","      <td>3.587433</td>\n","      <td>0.557624</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2.0</td>\n","      <td>-46.855047</td>\n","      <td>-63.344698</td>\n","      <td>-48.325589</td>\n","      <td>-5.683171</td>\n","      <td>-113.743307</td>\n","      <td>-21.929312</td>\n","      <td>-43.557242</td>\n","      <td>-73.216718</td>\n","      <td>-13.320155</td>\n","      <td>...</td>\n","      <td>-10.933144</td>\n","      <td>-36.666000</td>\n","      <td>-2.836627</td>\n","      <td>-7.081325</td>\n","      <td>-2.604551</td>\n","      <td>-22.565679</td>\n","      <td>-15.430084</td>\n","      <td>-0.307413</td>\n","      <td>-0.994983</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.0</td>\n","      <td>-0.918999</td>\n","      <td>-0.601184</td>\n","      <td>-0.897737</td>\n","      <td>-0.843486</td>\n","      <td>-0.691653</td>\n","      <td>-0.768976</td>\n","      <td>-0.557038</td>\n","      <td>-0.207301</td>\n","      <td>-0.639999</td>\n","      <td>...</td>\n","      <td>-0.544174</td>\n","      <td>-0.161839</td>\n","      <td>-0.354442</td>\n","      <td>-0.317557</td>\n","      <td>-0.327252</td>\n","      <td>-0.070642</td>\n","      <td>-0.052847</td>\n","      <td>-0.228044</td>\n","      <td>-0.356712</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.0</td>\n","      <td>0.020709</td>\n","      <td>0.063302</td>\n","      <td>0.177372</td>\n","      <td>-0.019912</td>\n","      <td>-0.054976</td>\n","      <td>-0.274172</td>\n","      <td>0.039709</td>\n","      <td>0.023347</td>\n","      <td>-0.048317</td>\n","      <td>...</td>\n","      <td>0.005412</td>\n","      <td>-0.010199</td>\n","      <td>0.041524</td>\n","      <td>0.015344</td>\n","      <td>-0.051785</td>\n","      <td>0.001390</td>\n","      <td>0.011157</td>\n","      <td>0.000000</td>\n","      <td>0.003665</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.0</td>\n","      <td>1.316016</td>\n","      <td>0.805219</td>\n","      <td>1.022959</td>\n","      <td>0.745448</td>\n","      <td>0.612851</td>\n","      <td>0.397152</td>\n","      <td>0.572513</td>\n","      <td>0.327192</td>\n","      <td>0.601995</td>\n","      <td>...</td>\n","      <td>0.528426</td>\n","      <td>0.148161</td>\n","      <td>0.440355</td>\n","      <td>0.347873</td>\n","      <td>0.241060</td>\n","      <td>0.091201</td>\n","      <td>0.078123</td>\n","      <td>0.772375</td>\n","      <td>0.642741</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.0</td>\n","      <td>2.446505</td>\n","      <td>22.057729</td>\n","      <td>9.382558</td>\n","      <td>16.875344</td>\n","      <td>32.911462</td>\n","      <td>73.301626</td>\n","      <td>120.589494</td>\n","      <td>19.587773</td>\n","      <td>15.594995</td>\n","      <td>...</td>\n","      <td>10.503090</td>\n","      <td>22.083545</td>\n","      <td>4.584549</td>\n","      <td>6.070850</td>\n","      <td>3.517346</td>\n","      <td>31.612198</td>\n","      <td>15.870474</td>\n","      <td>358.683155</td>\n","      <td>1.035022</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 32 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e7a48c4-29f6-44a2-8890-3ec842e23e8c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5e7a48c4-29f6-44a2-8890-3ec842e23e8c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5e7a48c4-29f6-44a2-8890-3ec842e23e8c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["td.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"NwzsFvKa23zt","executionInfo":{"status":"ok","timestamp":1658494337436,"user_tz":-540,"elapsed":678,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"b42aa58a-bc48-4ba5-f903-602d09b1ffaf"},"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  ID             V1             V2             V3  \\\n","count  113842.000000  113842.000000  113842.000000  113842.000000   \n","mean   142025.527837       0.000197       0.001289       0.009717   \n","std     82248.545392       1.951060       1.651064       1.496916   \n","min         3.000000     -56.407510     -72.715728     -32.454198   \n","25%     70796.750000      -0.923479      -0.595602      -0.883877   \n","50%    141722.000000       0.012074       0.066390       0.183868   \n","75%    213359.500000       1.315373       0.801687       1.037120   \n","max    284803.000000       2.454930      21.467203       4.187811   \n","\n","                  V4             V5             V6             V7  \\\n","count  113842.000000  113842.000000  113842.000000  113842.000000   \n","mean       -0.004169       0.000475       0.005141       0.005769   \n","std         1.412633       1.367533       1.330583       1.204111   \n","min        -5.600607     -42.147898     -26.160506     -41.506796   \n","25%        -0.853728      -0.689853      -0.766094      -0.552071   \n","50%        -0.019359      -0.054060      -0.272436       0.039036   \n","75%         0.742208       0.614214       0.405285       0.568750   \n","max        16.491217      34.801666      23.917837      44.054461   \n","\n","                  V8             V9  ...           V22            V23  \\\n","count  113842.000000  113842.000000  ...  1.138420e+05  113842.000000   \n","mean       -0.002451      -0.002107  ...  4.088347e-07      -0.001317   \n","std         1.185504       1.095415  ...  7.238291e-01       0.636061   \n","min       -50.943369     -13.434066  ... -8.887017e+00     -44.807735   \n","25%        -0.209492      -0.647477  ... -5.402665e-01      -0.162180   \n","50%         0.020970      -0.052157  ...  8.345807e-03      -0.012261   \n","75%         0.328303       0.590705  ...  5.287508e-01       0.147474   \n","max        20.007208      10.392889  ...  8.361985e+00      22.528412   \n","\n","                 V24            V25            V26            V27  \\\n","count  113842.000000  113842.000000  113842.000000  113842.000000   \n","mean       -0.000884       0.001680      -0.000293      -0.000234   \n","std         0.605854       0.520069       0.480979       0.399505   \n","min        -2.824849     -10.295397      -1.855355      -9.895244   \n","25%        -0.355582      -0.315470      -0.326160      -0.070847   \n","50%         0.040573       0.018278      -0.052815       0.001502   \n","75%         0.438225       0.353989       0.240838       0.091279   \n","max         4.022866       7.519589       3.119295      11.135740   \n","\n","                 V28            V29            V30     Class  \n","count  113842.000000  113842.000000  113842.000000  113842.0  \n","mean       -0.000508       0.927253       0.116232       0.0  \n","std         0.356130       3.412933       0.558161       0.0  \n","min        -9.617915      -0.307413      -0.994972       0.0  \n","25%        -0.053249      -0.230560      -0.360304       0.0  \n","50%         0.011158      -0.000699      -0.002590       0.0  \n","75%         0.077851       0.768532       0.640653       0.0  \n","max        33.847808     180.101027       1.034951       0.0  \n","\n","[8 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-058e6341-3a4c-4503-b20d-8d6d8662cbe3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>V29</th>\n","      <th>V30</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>...</td>\n","      <td>1.138420e+05</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.000000</td>\n","      <td>113842.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>142025.527837</td>\n","      <td>0.000197</td>\n","      <td>0.001289</td>\n","      <td>0.009717</td>\n","      <td>-0.004169</td>\n","      <td>0.000475</td>\n","      <td>0.005141</td>\n","      <td>0.005769</td>\n","      <td>-0.002451</td>\n","      <td>-0.002107</td>\n","      <td>...</td>\n","      <td>4.088347e-07</td>\n","      <td>-0.001317</td>\n","      <td>-0.000884</td>\n","      <td>0.001680</td>\n","      <td>-0.000293</td>\n","      <td>-0.000234</td>\n","      <td>-0.000508</td>\n","      <td>0.927253</td>\n","      <td>0.116232</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>82248.545392</td>\n","      <td>1.951060</td>\n","      <td>1.651064</td>\n","      <td>1.496916</td>\n","      <td>1.412633</td>\n","      <td>1.367533</td>\n","      <td>1.330583</td>\n","      <td>1.204111</td>\n","      <td>1.185504</td>\n","      <td>1.095415</td>\n","      <td>...</td>\n","      <td>7.238291e-01</td>\n","      <td>0.636061</td>\n","      <td>0.605854</td>\n","      <td>0.520069</td>\n","      <td>0.480979</td>\n","      <td>0.399505</td>\n","      <td>0.356130</td>\n","      <td>3.412933</td>\n","      <td>0.558161</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.000000</td>\n","      <td>-56.407510</td>\n","      <td>-72.715728</td>\n","      <td>-32.454198</td>\n","      <td>-5.600607</td>\n","      <td>-42.147898</td>\n","      <td>-26.160506</td>\n","      <td>-41.506796</td>\n","      <td>-50.943369</td>\n","      <td>-13.434066</td>\n","      <td>...</td>\n","      <td>-8.887017e+00</td>\n","      <td>-44.807735</td>\n","      <td>-2.824849</td>\n","      <td>-10.295397</td>\n","      <td>-1.855355</td>\n","      <td>-9.895244</td>\n","      <td>-9.617915</td>\n","      <td>-0.307413</td>\n","      <td>-0.994972</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>70796.750000</td>\n","      <td>-0.923479</td>\n","      <td>-0.595602</td>\n","      <td>-0.883877</td>\n","      <td>-0.853728</td>\n","      <td>-0.689853</td>\n","      <td>-0.766094</td>\n","      <td>-0.552071</td>\n","      <td>-0.209492</td>\n","      <td>-0.647477</td>\n","      <td>...</td>\n","      <td>-5.402665e-01</td>\n","      <td>-0.162180</td>\n","      <td>-0.355582</td>\n","      <td>-0.315470</td>\n","      <td>-0.326160</td>\n","      <td>-0.070847</td>\n","      <td>-0.053249</td>\n","      <td>-0.230560</td>\n","      <td>-0.360304</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>141722.000000</td>\n","      <td>0.012074</td>\n","      <td>0.066390</td>\n","      <td>0.183868</td>\n","      <td>-0.019359</td>\n","      <td>-0.054060</td>\n","      <td>-0.272436</td>\n","      <td>0.039036</td>\n","      <td>0.020970</td>\n","      <td>-0.052157</td>\n","      <td>...</td>\n","      <td>8.345807e-03</td>\n","      <td>-0.012261</td>\n","      <td>0.040573</td>\n","      <td>0.018278</td>\n","      <td>-0.052815</td>\n","      <td>0.001502</td>\n","      <td>0.011158</td>\n","      <td>-0.000699</td>\n","      <td>-0.002590</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>213359.500000</td>\n","      <td>1.315373</td>\n","      <td>0.801687</td>\n","      <td>1.037120</td>\n","      <td>0.742208</td>\n","      <td>0.614214</td>\n","      <td>0.405285</td>\n","      <td>0.568750</td>\n","      <td>0.328303</td>\n","      <td>0.590705</td>\n","      <td>...</td>\n","      <td>5.287508e-01</td>\n","      <td>0.147474</td>\n","      <td>0.438225</td>\n","      <td>0.353989</td>\n","      <td>0.240838</td>\n","      <td>0.091279</td>\n","      <td>0.077851</td>\n","      <td>0.768532</td>\n","      <td>0.640653</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>284803.000000</td>\n","      <td>2.454930</td>\n","      <td>21.467203</td>\n","      <td>4.187811</td>\n","      <td>16.491217</td>\n","      <td>34.801666</td>\n","      <td>23.917837</td>\n","      <td>44.054461</td>\n","      <td>20.007208</td>\n","      <td>10.392889</td>\n","      <td>...</td>\n","      <td>8.361985e+00</td>\n","      <td>22.528412</td>\n","      <td>4.022866</td>\n","      <td>7.519589</td>\n","      <td>3.119295</td>\n","      <td>11.135740</td>\n","      <td>33.847808</td>\n","      <td>180.101027</td>\n","      <td>1.034951</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 32 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-058e6341-3a4c-4503-b20d-8d6d8662cbe3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-058e6341-3a4c-4503-b20d-8d6d8662cbe3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-058e6341-3a4c-4503-b20d-8d6d8662cbe3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KSkuDhX4wE8a","executionInfo":{"status":"ok","timestamp":1658492272812,"user_tz":-540,"elapsed":2141,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"9f47c7fe-1d33-4de3-c6e9-9dc991d9db32"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["print(td.shape)\n","print(test_d.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k8rbuOgbwPJ0","executionInfo":{"status":"ok","timestamp":1658494349560,"user_tz":-540,"elapsed":8,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"89e15f7d-ebed-4155-9bff-c55e1fdca31d"},"execution_count":125,"outputs":[{"output_type":"stream","name":"stdout","text":["(113842, 32)\n","(142503, 32)\n"]}]},{"cell_type":"code","source":["non_fraud = td[td['Class'] == 0].sample(1000)\n","fraud = td[td['Class'] == 1]\n","\n","df = non_fraud.append(fraud).sample(frac=1).reset_index(drop=True)\n","X = df.drop(['ID','Class'], axis = 1).values\n","Y = df[\"Class\"].values\n","tsne_plot(X, Y, \"original.png\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":358},"id":"_uhuQh_h2gSY","executionInfo":{"status":"ok","timestamp":1658494367958,"user_tz":-540,"elapsed":10943,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"883c0a23-c058-4330-8540-d36e65dd8533"},"execution_count":126,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/manifold/_t_sne.py:783: FutureWarning: The default initialization in TSNE will change from 'random' to 'pca' in 1.2.\n","  FutureWarning,\n","/usr/local/lib/python3.7/dist-packages/sklearn/manifold/_t_sne.py:793: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.\n","  FutureWarning,\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### 3. Train a Variational Autoencoder"],"metadata":{"id":"A6CmuyKI2vVG"}},{"cell_type":"markdown","source":["We train a VAE with 113842 in-sample non-fraud transactions. As this is for exploratory and illustration purpose, the hidden layer design was by trial and error.\n","\n","The prior for the latent variables was set to be a random unit multivariate normal vector of the latent dimention. The latent dimension is set to 2 so that it give some intuitive illustrations as you will see soon.\n","\n","The output of the encoder, the latent distribution parameters, was deliberated chosen to be multiviarate normal with non-zero covariance because I noticed it had subsequent impact on the separation of normal transactions from fraud transactions, suggesting that the covariance of fraud transactions may have patterns. As a result, there are 5 distribution parameters to be learnt (2 mean values + 3 covariance values from the lower triangle of the 2-buy-2 covariance matrix)\n","\n","The output of the decoder, the data distribution parameters, follow feature-independent normal distributions. This choice is important. Most of the examples I could find online were applied to binary images such as the MNIST dataset where the output would follow independent bernoulli distributions. Here the data are real-valued and generally follow normal distributions, hence it only makes sense to model the output with normal distributions or alike. Another important implication of having the right distribution is that it will give the corresponding log probability loss during training. It would not make sense to train a real-valued normal distribution using binary cross entropy, for example."],"metadata":{"id":"AmZWjEPk2xTV"}},{"cell_type":"code","source":["def dense_layers(sizes):\n","    return tfk.Sequential([tfkl.Dense(size, activation=tf.nn.leaky_relu) for size in sizes])\n","\n","original_dim = X.shape[1]\n","input_shape = X[0].shape\n","intermediary_dims = [20, 10, 8]\n","latent_dim = 2\n","batch_size = 128\n","max_epochs = 1000\n","\n","# prior = tfd.Independent(tfd.Normal(loc=tf.zeros(latent_dim), scale=1),\n","#                         reinterpreted_batch_ndims=1)\n","\n","prior = tfd.MultivariateNormalDiag(\n","        loc=tf.zeros([latent_dim]),\n","        scale_identity_multiplier=1.0)\n","\n","encoder = tfk.Sequential([\n","    tfkl.InputLayer(input_shape=input_shape, name='encoder_input'),\n","    dense_layers(intermediary_dims),\n","    tfkl.Dense(tfpl.MultivariateNormalTriL.params_size(latent_dim), activation=None),\n","    tfpl.MultivariateNormalTriL(latent_dim, \n","                           activity_regularizer=tfpl.KLDivergenceRegularizer(prior)),\n","], name='encoder')\n","\n","encoder.summary()\n","plot_model(encoder, to_file='vae_mlp_encoder.png', show_shapes=True)\n","\n","decoder = tfk.Sequential([\n","    tfkl.InputLayer(input_shape=[latent_dim]),\n","    dense_layers(reversed(intermediary_dims)),\n","    tfkl.Dense(tfpl.IndependentNormal.params_size(original_dim), activation=None),\n","    tfpl.IndependentNormal(original_dim),\n","], name='decoder')\n","\n","decoder.summary()\n","plot_model(decoder, to_file='vae_mlp_decoder.png', show_shapes=True)\n","\n","vae = tfk.Model(inputs=encoder.inputs,\n","                outputs=decoder(encoder.outputs[0]),\n","                name='vae_mlp')\n","\n","negloglik = lambda x, rv_x: -rv_x.log_prob(x)\n","\n","vae.compile(optimizer=tf.keras.optimizers.Nadam(), \n","            loss=negloglik)\n","\n","vae.summary()\n","plot_model(vae,\n","           to_file='vae_mlp.png',\n","           show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"w4uoBenS3s-u","executionInfo":{"status":"ok","timestamp":1658492811618,"user_tz":-540,"elapsed":2342,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"d35a9fbc-0d33-46ed-bdc9-42398ba94334"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["WARNING:tensorflow:Please fix your imports. Module tensorflow.python.training.tracking.data_structures has been moved to tensorflow.python.trackable.data_structures. The old module will be deleted in version 2.11.\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:Please fix your imports. Module tensorflow.python.training.tracking.data_structures has been moved to tensorflow.python.trackable.data_structures. The old module will be deleted in version 2.11.\n"]},{"output_type":"stream","name":"stdout","text":["Model: \"encoder\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," sequential (Sequential)     (None, 8)                 938       \n","                                                                 \n"," dense_3 (Dense)             (None, 5)                 45        \n","                                                                 \n"," multivariate_normal_tri_l (  ((None, 2),              0         \n"," MultivariateNormalTriL)      (None, 2))                         \n","                                                                 \n","=================================================================\n","Total params: 983\n","Trainable params: 983\n","Non-trainable params: 0\n","_________________________________________________________________\n","Model: \"decoder\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," sequential_1 (Sequential)   (None, 20)                334       \n","                                                                 \n"," dense_7 (Dense)             (None, 62)                1302      \n","                                                                 \n"," independent_normal (Indepen  ((None, 31),             0         \n"," dentNormal)                  (None, 31))                        \n","                                                                 \n","=================================================================\n","Total params: 1,636\n","Trainable params: 1,636\n","Non-trainable params: 0\n","_________________________________________________________________\n","WARNING:tensorflow:Layers in a Sequential model should only have a single input tensor. Received: inputs=tfp.distributions._TensorCoercible(\"tensor_coercible\", batch_shape=[?], event_shape=[2], dtype=float32). Consider rewriting this model with the Functional API.\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:Layers in a Sequential model should only have a single input tensor. Received: inputs=tfp.distributions._TensorCoercible(\"tensor_coercible\", batch_shape=[?], event_shape=[2], dtype=float32). Consider rewriting this model with the Functional API.\n"]},{"output_type":"stream","name":"stdout","text":["Model: \"vae_mlp\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," encoder_input (InputLayer)  [(None, 31)]              0         \n","                                                                 \n"," sequential (Sequential)     (None, 8)                 938       \n","                                                                 \n"," dense_3 (Dense)             (None, 5)                 45        \n","                                                                 \n"," multivariate_normal_tri_l (  ((None, 2),              0         \n"," MultivariateNormalTriL)      (None, 2))                         \n","                                                                 \n"," decoder (Sequential)        (None, 31)                1636      \n","                                                                 \n","=================================================================\n","Total params: 2,619\n","Trainable params: 2,619\n","Non-trainable params: 0\n","_________________________________________________________________\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"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\n"},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["x = td.drop([\"ID\",\"Class\"], axis=1)\n","y = td[\"Class\"].values\n","\n","x_norm, x_fraud = x.values[y == 0], x.values[y == 1]\n","\n","x_norm_sample = x_norm[np.random.randint(x_norm.shape[0], size=100000), :]\n","x_norm_train_sample, x_norm_val_sample = train_test_split(x_norm_sample, test_size=0.2)"],"metadata":{"id":"TJqSZbri4aI_","executionInfo":{"status":"ok","timestamp":1658494388249,"user_tz":-540,"elapsed":241,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":127,"outputs":[]},{"cell_type":"code","source":["tf_train = tf.data.Dataset.from_tensor_slices((x_norm_train_sample, x_norm_train_sample)).batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE).shuffle(int(10e4))\n","tf_val = tf.data.Dataset.from_tensor_slices((x_norm_val_sample, x_norm_val_sample)).batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE).shuffle(int(10e4))"],"metadata":{"id":"GXo4WRzC5P5m","executionInfo":{"status":"ok","timestamp":1658494398632,"user_tz":-540,"elapsed":263,"user":{"displayName":"정연호","userId":"06209992571909238154"}}},"execution_count":128,"outputs":[]},{"cell_type":"code","source":["x_test_log_prob = reconstruction_log_prob(test_d.drop(['Class'], axis = 1).values.astype(np.float32), reconstruct_samples_n)\n","test_y = test_d[\"Class\"].values.astype(np.float32)\n","\n","fpr, tpr, thresh = roc_curve(test_y, -x_test_log_prob)\n","auc = roc_auc_score(test_y, -x_test_log_prob)\n","\n","plt.plot(fpr,tpr,label=\"linear in-sample, auc=\"+str(auc))\n","plt.title('VAE roc curve - test')\n","plt.ylabel('True Positive Rate')\n","plt.xlabel(\"False Positive Rate\")\n","plt.legend(loc='best')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"W2Xo2eeV5PR2","executionInfo":{"status":"error","timestamp":1658494892398,"user_tz":-540,"elapsed":5002,"user":{"displayName":"정연호","userId":"06209992571909238154"}},"outputId":"b29e003b-27c0-46f0-f5b1-9e2d24a2d724"},"execution_count":143,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-143-1efd33534ae9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx_test_log_prob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreconstruction_log_prob\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_d\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Class'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreconstruct_samples_n\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mtest_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_d\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Class\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mfpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mthresh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mroc_curve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0mx_test_log_prob\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mauc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mroc_auc_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0mx_test_log_prob\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-80-3c90543f1c25>\u001b[0m in \u001b[0;36mreconstruction_log_prob\u001b[0;34m(eval_samples, reconstruct_samples_n)\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mencoder_out\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mencoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meval_samples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mencoder_samples\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mencoder_out\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreconstruct_samples_n\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdecoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mencoder_samples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog_prob\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meval_samples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/input_spec.py\u001b[0m in \u001b[0;36massert_input_compatibility\u001b[0;34m(input_spec, inputs, layer_name)\u001b[0m\n\u001b[1;32m    262\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mspec_dim\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mdim\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    263\u001b[0m           \u001b[0;32mif\u001b[0m \u001b[0mspec_dim\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mdim\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 264\u001b[0;31m             raise ValueError(f'Input {input_index} of layer \"{layer_name}\" is '\n\u001b[0m\u001b[1;32m    265\u001b[0m                              \u001b[0;34m'incompatible with the layer: '\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    266\u001b[0m                              \u001b[0;34mf'expected shape={spec.shape}, '\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Input 0 of layer \"decoder\" is incompatible with the layer: expected shape=(None, 2), found shape=(100, 142503, 2)"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"8bADfVJC5PUO"},"execution_count":null,"outputs":[]}]}